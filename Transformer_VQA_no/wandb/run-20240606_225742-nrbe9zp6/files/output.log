Not using distributed mode
Creating vqa datasets
Creating model
load checkpoint from /home/admin1/5703-upload/5703/Transformer_VQA_no/output_vqa2/vqa/checkpoint_07.pth ,evaluate.
<All keys matched successfully>
Start training
['down[SEP]', 'down[SEP]', 'at table[SEP]', 'skateboard[SEP]', 'down[SEP]', 'table[SEP]', 'down[SEP]', 'down[SEP]', 'down[SEP]', 'down[SEP]', 'spectating[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'watching[SEP]', 'table[SEP]', 'table[SEP]', 'table[SEP]', 'picnic table[SEP]', 'picnic table[SEP]', 'picnic table[SEP]', 'picnic table[SEP]', 'picnic table[SEP]', 'skateboard[SEP]', 'picnic table[SEP]', 'foodiebakercom[SEP]', 'foodiebakercom[SEP]', 'foodiebaker[SEP]', 'foodiebakercom[SEP]', 'foodiebakercom[SEP]', 'http: foodiebakercom[SEP]', 'foodiebakercom[SEP]', 'foodiebakercom[SEP]', 'foodiebakercom[SEP]', 'foodiebaker[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'shrimp[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'chopsticks[SEP]', 'chopsticks spoon[SEP]', 'crossing it[SEP]', 'walking[SEP]', 'walking[SEP]', 'crossing[SEP]', 'crossing road[SEP]', 'walking[SEP]', 'crossing[SEP]', 'walking[SEP]', 'crossing[SEP]', 'walking[SEP]']
Generate VQA test result:  [    0/26794]  eta: 7:13:43  acc: 0.0000  time: 0.9712  data: 0.3516  max mem: 4164
['1[SEP]', '1[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '1[SEP]', '1[SEP]', '4[SEP]', '1[SEP]', '1[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ice cream[SEP]', 'ventilation[SEP]', 'provide air[SEP]', 'keep cow safe[SEP]', 'airflow[SEP]', 'to let sunlight in[SEP]', 'yes[SEP]', 'yes[SEP]', 'for air[SEP]', 'air[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'tired[SEP]', 'tired[SEP]', '4[SEP]', 'resting[SEP]', 'tired[SEP]', 'tired[SEP]', 'resting[SEP]', 'tired[SEP]', "it's tired[SEP]", 'tired[SEP]', 'gray[SEP]', 'green[SEP]', 'green[SEP]', 'black white[SEP]', 'green[SEP]', 'gray[SEP]', 'green[SEP]', 'brown[SEP]', 'gray[SEP]', 'green[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', 'boy[SEP]']
['no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '10[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', 'beige[SEP]', 'white[SEP]', 'pink[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'yellow[SEP]', 'yellow[SEP]', 'beige[SEP]', 'yellow[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no it is queen[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '2[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '2[SEP]']
['no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'leather[SEP]', 'leather[SEP]', 'plastic[SEP]', 'plastic vinyl metal[SEP]', 'leather[SEP]', 'leather[SEP]', 'leather[SEP]', 'leather[SEP]', 'leather[SEP]', 'leather[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]']
['yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes just one[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', 'bedroom[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]', '1[SEP]']
['7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', 'white[SEP]', 'off white[SEP]', 'off white[SEP]', 'white[SEP]', 'white[SEP]', 'beige[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'panther[SEP]', 'none[SEP]', 'leather[SEP]', 'dog[SEP]', 'cat[SEP]', 'none[SEP]', 'none[SEP]', 'none[SEP]', 'none[SEP]', 'dog[SEP]', 'chair[SEP]', 'chair[SEP]', 'chair[SEP]', 'wall[SEP]', 'chair[SEP]', 'chair[SEP]', 'chair[SEP]', 'chair[SEP]', 'chair[SEP]', 'chair[SEP]', 'queen[SEP]', 'queen[SEP]', 'queen[SEP]', 'queen sized[SEP]', 'full[SEP]', 'queen[SEP]', 'queen[SEP]', 'double[SEP]', 'king[SEP]', 'queen[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '7[SEP]', '6[SEP]', '7[SEP]']
['yes[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'donut[SEP]', 'donut[SEP]', 'donut[SEP]', 'doughnut[SEP]', 'donut[SEP]', 'donut[SEP]', 'donut[SEP]', 'donut hole[SEP]', 'donut[SEP]', 'donut[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'blonde[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'in forest[SEP]', 'in jungle[SEP]', 'park[SEP]', 'forest[SEP]', 'forest[SEP]', 'outside[SEP]', 'forest[SEP]', 'not sure[SEP]', 'outside[SEP]', 'hawaii[SEP]', 'plant life[SEP]', 'hat[SEP]', 'hat[SEP]', 'hat[SEP]', 'silly hat[SEP]', 'palm leaves[SEP]', 'leaf hat[SEP]', 'hat[SEP]', 'hat[SEP]', 'crown[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]']
['no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'inward[SEP]', 'outward[SEP]', 'inward[SEP]', 'outward[SEP]', 'outward[SEP]', 'not sure[SEP]', 'outward[SEP]', 'out[SEP]', 'inward[SEP]', 'inward[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'this is camping[SEP]', 'jeep[SEP]', 'bus[SEP]', 'jeep[SEP]', 'brown[SEP]', 'suv[SEP]', 'suv[SEP]', 'car[SEP]', 'jeep[SEP]', 'jeep[SEP]', 'jeep[SEP]', 'forest[SEP]', 'in wood[SEP]', 'woods[SEP]', 'woods[SEP]', 'in woods[SEP]', 'top picture[SEP]', 'top picture[SEP]', 'top picture[SEP]', 'campground[SEP]', 'woods[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'white and black[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'white[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]']
['black[SEP]', 'red[SEP]', 'red[SEP]', 'red[SEP]', 'red and blue[SEP]', 'red[SEP]', 'red[SEP]', 'red[SEP]', 'red[SEP]', 'red[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '3[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', '4[SEP]', 'white with blue lettering[SEP]', 'white and blue[SEP]', 'white[SEP]', 'blue and white[SEP]', 'white brown[SEP]', 'white[SEP]', 'white[SEP]', 'not sure[SEP]', 'white[SEP]', 'white and blue[SEP]', 'ross st[SEP]', 'ross st[SEP]', 'ross st[SEP]', 'ross st[SEP]', 'ross st[SEP]', 'ross street[SEP]', 'ross[SEP]', 'ross st[SEP]', 'ross st[SEP]', 'camperdown ross st[SEP]', 'red and yellow[SEP]', 'red[SEP]', 'red[SEP]', 'orange yellow white black[SEP]', 'red and yellow[SEP]', 'red yellow[SEP]', 'red orange[SEP]', 'red and orange[SEP]', 'red and yellow[SEP]', 'red[SEP]']
['no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'right[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'green[SEP]', 'white[SEP]', 'green[SEP]', 'green[SEP]', 'green[SEP]', 'green[SEP]', 'green[SEP]', 'red orange[SEP]', 'green[SEP]', 'green[SEP]', 'black[SEP]', 'black[SEP]', 'black[SEP]', 'black[SEP]', 'black[SEP]', 'black[SEP]', 'black[SEP]', 'blonde[SEP]', 'black[SEP]', 'black[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', 'wine[SEP]', "they aren't[SEP]", 'fashion[SEP]', 'no hats[SEP]', 'none are wearing hats[SEP]', 'none are[SEP]', 'style[SEP]', "nobody's wearing hats[SEP]", 'nobody is wearing hats[SEP]', 'to keep warm[SEP]', 'they are not[SEP]', 'wine tasting[SEP]', 'wedding[SEP]', 'wine[SEP]', 'taste testing[SEP]', 'alcohol show[SEP]', 'wine[SEP]', 'wine sale[SEP]', 'wine tasting[SEP]', 'wine tasting[SEP]', 'wine tasting[SEP]', '2[SEP]', '2[SEP]', '2[SEP]', '0[SEP]', '2[SEP]', '2[SEP]', '2[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', 'gray[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]']
['yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', '2[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', '3[SEP]', '3[SEP]', '4[SEP]', '3[SEP]', '5[SEP]', '5[SEP]', 'many[SEP]', '3[SEP]', '6[SEP]', '3[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'maybe[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '0[SEP]', '1[SEP]', '2[SEP]', '1[SEP]', 'brown[SEP]', '2[SEP]', '1[SEP]', '1[SEP]', '2[SEP]', '2[SEP]', '1[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]', 'backpack[SEP]']
['0[SEP]', '2[SEP]', '1[SEP]', '1[SEP]', '0[SEP]', '1[SEP]', '0[SEP]', '0[SEP]', '1[SEP]', '0[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'gray[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'brown[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', '8[SEP]', '8[SEP]', '8[SEP]', '8[SEP]', '8[SEP]', '8[SEP]', '8[SEP]', '6[SEP]', '8[SEP]', '6[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'birthday[SEP]', 'woman[SEP]', 'boy[SEP]', 'cup[SEP]', 'birthday boy[SEP]', 'woman[SEP]', 'boy in blue shirt[SEP]', 'little girl[SEP]', 'boy[SEP]', 'boy[SEP]', 'girl[SEP]']
['train[SEP]', 'train[SEP]', 'train[SEP]', 'train[SEP]', 'train[SEP]', 'yes[SEP]', 'train[SEP]', 'train[SEP]', 'train[SEP]', 'bus[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'shadows[SEP]', 'human[SEP]', 'shadow[SEP]', 'sun[SEP]', 'train[SEP]', 'line[SEP]', 'train[SEP]', 'shadow[SEP]', 'sky[SEP]', 'shadow[SEP]', 'trees[SEP]', 'station[SEP]', 'awning[SEP]', 'platform[SEP]', 'platform[SEP]', 'platform[SEP]', 'roof[SEP]', 'shelter[SEP]', 'train stop[SEP]', 'awning[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'no[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'yes[SEP]', 'no[SEP]', 'yes[SEP]']
Traceback (most recent call last):
  File "/home/admin1/5703-upload/5703/Transformer_VQA_no/run_vqa2.py", line 401, in <module>
    main(args, config)
  File "/home/admin1/5703-upload/5703/Transformer_VQA_no/run_vqa2.py", line 360, in main
    vqa_result = evaluation(model, test_loader, tokenizer, device, config)
  File "/home/admin1/anconda3/envs/pytorch2.0/lib/python3.9/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/admin1/5703-upload/5703/Transformer_VQA_no/run_vqa2.py", line 148, in evaluation
    pred_text = data_loader.dataset.answer_list[topk_id[pred]]
KeyboardInterrupt